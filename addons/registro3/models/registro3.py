# -*- coding: utf-8 -*-
##############################################################################
#
#    OpenERP, Open Source Management Solution
#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################
# Generated by the Odoo plugin for Dia !
from openerp import api, fields, models

class persona(models.Model):
    """Modelo que se utiliza para registrar los datos basicos de cada participante del curso"""
    _name = 'persona'
    #_rec_name = ''
    cedula = fields.Integer(string='Cedula', help='Ingrese su cédula en el formato 16123123')
    rif = fields.Integer(string='Rif', help='Ingrese su cedula en el formato 12345678-9')
    primer_nombre = fields.Char(string= 'Primer Nombre', help='Ingrese su primer nombre. Ejemplo: Crisbel')
    segundo_nombre = fields.Char(string= 'Segundo Nombre', help='Ingrese su segundo nombre Ejemplo: Francisas')
    primer_apellido = fields.Char(string= 'Primer apellido', help='Ingrese su Primer apellido Ejemplo: Pinzon')
    segundo_apellido = fields.Char(string='Segundo Apellido', help='Ingrese su segundo Apellido Ejemplo: Villarroel')
    sexo = fields.Selection([('M','Masculino'),('F','Femenino')], string='Sexo', help='Seleccione su sexo')
    fecha_nacimiento = fields.Date(string='Fecha de Nacimiento', help='Selecciones su fecha de nacimiento. Seleccionando la fecha en el asistente o escribiendola en el formato 01/01/1999')
    direccion = fields.Text('Dirección', help='Ingrese su direccion de habitación')
    telefono = fields.Char(string='Télefono', help='Ingrese su télefono en el formato 0414-9355744')
    correo = fields.Char(string='Correo Electronico', help='Ingrese su correo electronico en el formato ejempli@ejemplo.com')
    vinculacion_tecnologica = fields.Selection([('A','Activista'),('U','Usuario'),('P','Productor')], string ='Vinculacion Tecnologica' , help='Ingrese su vinculacion tecnologica')
    estado_id = fields.Many2one('estado', string='Estado')
    municipio_id = fields.Many2one('municipio', string='Municipio')
    parroquia_id = fields.Many2one('parroquia', string='Parroquia')
    vivienda_ids = fields.Many2many('vivienda',string='Vivienda')
    socio_economico_id = fields.One2many('socio_economico','persona_ids',string='socio_economico')
    unidad_productiva_ids = fields.Many2many('unidad_productiva',string='Unidad productiva')


class estado(models.Model):
    """Modelo que registra el estado"""
    _name = 'estado'
    #_rec_name = ''
    code = fields.Char(string='Code', help='Ingresar un codigo para el estado')
    name = fields.Char(string='Name', help='Ingresar el nombre del estado')
    municipio_ids = fields.One2many('municipio','estado_id',string='municipio')


class municipio(models.Model):
    """Modulo que registra el municipio"""
    _name = 'municipio'
    #_rec_name = ''
    code = fields.Char(string='Code', help='Ingresar un codigo para el municipio')
    name = fields.Char(string='Name', help='Ingresar el nombre del municipio')
    estado_id = fields.Many2one('estado',string='Estado', help='Seleccione su Estado ')


class parroquia(models.Model):
    """Modulo que registra la parroquia """
    _name = 'parroquia'
    #_rec_name = ''
    code = fields.Char(string='Code', help='Ingresar un codigo para el parroquia')
    name = fields.Char(string='Name', help='Ingresar el nombre del parroquia')
    municipio_id = fields.Many2one('municipio',string='municipio', help='Seleccione su Municipio ')


class vivienda(models.Model):
    """Registro vivienda clase persona"""
    _name = 'vivienda'
    #_rec_name = ''
    fecha_registro = fields.Date(string='Fecha de Registro', help='Selecciones su fecha de registro. Seleccionando la fecha en el asistente o escribiendola en el formato 01/01/1999')
    condicion = fields.Selection([('E','Estable',),('I','Inestable'),('A','Altoriesgo'),('V','Vulnerable')], string='Condicion', help='Seleccione la condicion de la vivienda ')
    tenencia = fields.Selection([('P','Propia',),('A','Alquilada'),('C','Compartida'),('I','Invadida')], string='Tenencia', help='Seleccione el tipo de tenencia de su viviend')
    tipo = fields.Selection([('Q','Quinta',),('CA','Casa'),('A','Apartamento'),('R','Rancho'),('AN','Anexo')], string='Tipo', help='seleccione el tipo de vivienda actual')
    television = fields.Boolean(string='Television', help='la persona tildara si posee television')
    computadora = fields.Boolean(string='Computadora', help='la persona tildara si posee computadora')
    internet = fields.Boolean(string='Internet', help='la persona tildara si posee internet')
    persona_ids = fields.Many2many('persona',string='Persona')



class socio_economico(models.Model):
    """registra el nivel socio ecnonomico de la persona"""
    _name = 'socio_economico'
    #_rec_name = ''
    discapacidad = fields.Boolean(string='¿posee alguna discapacidad?', help='la persona nombrara si tiene alguna discapacidad')
    cantidad_hijos= fields.Selection([('O','Ninguno'),('I','Uno'),('II','Dos'),('III','Tres'),('IV','Cuatro'),('Mas','Mas de 4')], help='la persona indicara si tiene hijos')
    grupo_familiar = fields.Selection([('II','Dos'),('III','Tres'),('IV','Cuatro'),('V','Cinco'),('Ma','Mas 5')],string='Grupo Familiar', help='La persona podra espicificar su carga familiar')
    ocupacion = fields.Char(string='¿Cual es su ocupacion?', help='la persona especifica la ocupacion')
    ingreso_mensual = fields.Float(string='Ingreso Mensual', help='La persona indicara su ingreso mensual')
    grado_instruccion = fields.Char(string='¿cual es su grado de instruccion?', help='la persona indicara el grado de isntruccion')
    trabaja = fields.Boolean(string='¿Trabaja actualmente?', help='la persona indacara si posee trabajo')
    estado_civil =fields.Selection([('S','Soltero(a)'),('C','Casado(a)'),('Se','Separado(a)'),('Di','Divorciado(a)'),('Vi','Viudo(a)')],string='Estado civil', help='La persona podra espicificar el estado civil')
    persona_ids = fields.Many2one('persona',string='persona')


class unidad_productiva(models.Model):
    """la persona registra su inidad productiva"""
    _name = 'unidad_productiva'
    #_rec_name = ''
    nombre = fields.Char(string='Nombre de la industria tecnologica', help='la persona podra colocar el nombre de su industria')
    rif = fields.Integer(string='Rif', help='Ingrese su cedula en el formato 12345678-9')
    correo = fields.Char(string='Correo Electronico', help='Ingrese su correo electronico en el formato ejempli@ejemplo.com')
    facebook = fields.Char(string='Facebook', help='Ingrese su facebook con el nombre de su unidad profuctivad')
    twitter = fields.Char(string='Twitter', help='Ingrese su twitter con el nombre de su unidad profuctivad')
    tipo_industria = fields.Selection([('G','Grupal'),('F','Freelance'),('C','Cooperativa')], string='Tipo', help='la persona indicara el tipo de industria')
    tipo_tecnologia = fields.Char(string='¿Que tipo de tecnologia conoce?', help='la persona especifica el tipo de tegnologia ')
    tecnologia_usa = fields.Char(string='¿Que tipo de tecnologia usa?', help='la persona especifica el tipo de tegnologia que usa ')
    uso_diario = fields.Char(string='Cual usas a diario?', help='la persona especifica el uso diario ')
    domina = fields.Char(string='¿Cuales Dominas?', help='la persona especifica cual herramienta tecnologica domina ')
    personas_ids = fields.Many2many('persona', string='Persona')


